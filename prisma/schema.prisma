generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
  relationMode = "foreignKeys"
}

model User {
  id        BigInt    @id @default(autoincrement())
  name      String
  clerkId   String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model DeployedBuoy {
  id        BigInt    @id @default(autoincrement())
  name      String
  location  String
  configId  BigInt    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  hasBuoyAccess   BuoyAccess[]      @relation("buoyAccess")
  detectProcesses DetectProcesses[] @relation("detectedProcesses")
  buoyConfig      BuoyConfig        @relation("buoyConfig", fields: [configId], references: [id])
}

model BuoyAccess {
  id        BigInt    @id @default(autoincrement())
  buoyId    BigInt?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  buoyAccessTo DeployedBuoy? @relation("buoyAccess", fields: [buoyId], references: [id])
}

model BuoyConfig {
  id           BigInt        @id @default(autoincrement())
  interval     Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime?     @updatedAt
  deployedBuoy DeployedBuoy? @relation("buoyConfig")
}

model DetectProcesses {
  id                    BigInt    @id @default(autoincrement())
  buoyId                BigInt
  detectedMicroplastics Int
  imgUrl                String
  createdAt             DateTime  @default(now())
  updatedAt             DateTime? @updatedAt

  buoyDeployed DeployedBuoy @relation("detectedProcesses", fields: [buoyId], references: [id])
}

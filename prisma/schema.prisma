generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
  relationMode = "foreignKeys"
}

model User {
  id          BigInt       @id @default(autoincrement())
  name        String
  clerkId     String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime?    @updatedAt

  hasAccessTo BuoyAccess[] @relation("hasBuoyAccess")
}

model DeployedBuoy {
  id              BigInt            @id @default(autoincrement())
  name            String
  location        String
  configId        BigInt            @unique
  createdAt       DateTime          @default(now())
  updatedAt       DateTime?         @updatedAt

  hasBuoyAccess   BuoyAccess[]      @relation("buoyAccess")
  buoyConfig      BuoyConfig        @relation("buoyConfig", fields: [configId], references: [id])
  detectProcesses DetectProcesses[] @relation("detectedProcesses")
}

model BuoyAccess {
  id        BigInt        @id @default(autoincrement())
  userId    BigInt?
  buoyId    BigInt?
  createdAt DateTime      @default(now())

  updatedAt DateTime?     @updatedAt
  accessTo  DeployedBuoy? @relation("buoyAccess", fields: [buoyId], references: [id])
  hasAccess User?         @relation("hasBuoyAccess", fields: [userId], references: [id])
}

model BuoyConfig {
  id            BigInt        @id @default(autoincrement())
  interval      Int
  requestStatus String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime?     @updatedAt

  deployedBuoy DeployedBuoy? @relation("buoyConfig")
}

model DetectProcesses {
  id                    BigInt       @id @default(autoincrement())
  buoyId                BigInt
  detectedMicroplastics Int
  imgUrl                String
  locationTaken         String
  
  createdAt             DateTime     @default(now())
  updatedAt             DateTime?    @updatedAt
  buoyDeployed          DeployedBuoy @relation("detectedProcesses", fields: [buoyId], references: [id])
}
